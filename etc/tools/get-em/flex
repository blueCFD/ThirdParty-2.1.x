#!/bin/sh
#------------------------------------------------------------------------------
# License
#
#     This file is part of the branch "get-em" available here:
#         https://github.com/wyldckat/ThirdParty-2.0.x/commits/get-em
#
#     These modifications have not been endorsed by OpenCFD Ltd, SGI corp nor
#   the OpenFOAM Foundation.
#
#     It's licensed under the same license of the target software, namely GPL
#   v3 or above (see <http://www.gnu.org/licenses/>).
#
#     The target software is OpenFOAM(R) <http://www.openfoam.com>, which is
#   trademarked by and Copyright (C) OpenFOAM Foundation.
#
# File
#     etc/tools/get-em/flex
#
# Description
#     This script will gather the necessary information about the application.
#     This script expects to be executed in the base folder where the get-em script is.
#
# FIXME
#   * Currently it is hard-coded to use tar.gz.
#
#------------------------------------------------------------------------------

versionVar="flex_version"
appName="flex"
appDefaultSep="-"
appFileExt="tar.gz"

#
# Shows the description for this application.
#
GE_showDesc()
{
  echo "flex - Retrieve the Flex package. Size: 300kB to 1.5MB"
}


#
# Updates the file defined in $versionCacheFile, using the mirror url $1 and
# uses the $testFile as a sandbox.
#
GE_update()
{
  wget "${1}" -O $testFile > /dev/null 2>&1
  grep -e 'flex-[0-9\.a]*'$appFileExt $testFile | \
    sed -e 's=.*\(flex-[0-9\.a]*\).'$appFileExt'.*=\1=' -e 's_-_=_' | \
    sort -u > ${versionCacheFile}

  grep -e 'flex-[0-9.a]*'$appFileExt $testFile | \
    sed -e 's_.*\(http.*flex\-[0-9\.a].*.download\).*_\1_' | \
    sort -u > ${versionCacheFile}_urls

  rm $testFile
}


#
# Receives the mirror url $1, the real version $2 and the variable $appFileExt.
# Shows the full url for the file to be downloaded.
#
GE_geturl()
{
  grep -e "-${2}\.$appFileExt" ${versionCacheFile}_urls
}


#
# Echoes the relative path of the target folder. Receives the real version $1.
#
GE_getfolder()
{
  echo flex-$1
}


#
# Echoes the number of folder levels counting from the left that the unpacker
# should drop. This is (or at least it should be) a prevention mechanism for
# tar/zipbombs.
#
GE_levels()
{
  echo 1
}


# Finally source the master script
. etc/tools/get-emScriptFunctions
